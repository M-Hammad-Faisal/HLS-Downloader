name: Build and Release

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run linting
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build-installer-bundles:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential

    - name: Generate release bundles
      run: python prepare_release.py

    - name: Upload release assets
      uses: actions/upload-artifact@v4
      with:
        name: release-assets
        path: release_assets/
        retention-days: 30

  release:
    needs: build-installer-bundles
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download release assets
      uses: actions/download-artifact@v4
      with:
        name: release-assets
        path: release_assets

    - name: Read release template
      id: release_template
      run: |
        if [ -f "release_assets/GITHUB_RELEASE_TEMPLATE.md" ]; then
          echo "RELEASE_BODY<<EOF" >> $GITHUB_OUTPUT
          cat release_assets/GITHUB_RELEASE_TEMPLATE.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "RELEASE_BODY=Release v${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release_assets/HLS-Video-Downloader-*.zip
          release_assets/HLS-Video-Downloader-*.tar.gz
          release_assets/SHA256SUMS.txt
          release_assets/RELEASE_NOTES.md
        body: ${{ steps.release_template.outputs.RELEASE_BODY }}
        draft: false
        prerelease: false
        generate_release_notes: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}