name: Build and Release

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: windows
            arch: x64
            executable_ext: .exe
          - os: macos-latest
            platform: macos
            arch: x64
            executable_ext: ""
          - os: macos-14
            platform: macos
            arch: arm64
            executable_ext: ""

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Install Playwright browsers
      run: |
        playwright install chromium
        playwright install-deps chromium

    - name: Build executable
      run: python build_executable.py

    - name: Create release directory
      shell: bash
      run: |
        mkdir -p release
        if [ "${{ runner.os }}" == "Windows" ]; then
          cp "dist/HLS Downloader.exe" "release/HLS-Downloader-${{ matrix.platform }}-${{ matrix.arch }}.exe"
        elif [ "${{ runner.os }}" == "macOS" ]; then
          # For macOS, we should have a .app bundle
          if [ -d "dist/HLS Downloader.app" ]; then
            # Create a zip file of the .app bundle for easier distribution
            cd dist
            zip -r "../release/HLS-Downloader-${{ matrix.platform }}-${{ matrix.arch }}.app.zip" "HLS Downloader.app"
            cd ..
          else
            # Fallback to executable if .app bundle wasn't created
            cp "dist/HLS Downloader" "release/HLS-Downloader-${{ matrix.platform }}-${{ matrix.arch }}"
          fi
        else
          cp "dist/HLS Downloader" "release/HLS-Downloader-${{ matrix.platform }}-${{ matrix.arch }}"
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: HLS-Downloader-${{ matrix.platform }}-${{ matrix.arch }}
        path: release/
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}